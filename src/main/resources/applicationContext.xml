<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx.xsd">
  <!-- 资源文件位置 -->               
  <context:property-placeholder location="classpath:/config.properties"/>                      
  <!-- 开启注解 -->
  <context:annotation-config/>
  <!-- 包扫描 -->
  <context:component-scan base-package="com.zhihao.seckill..">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>
  <!-- 数据库连接池配置 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <!-- 基本属性 url、user、password -->
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />

    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="1" />
    <property name="minIdle" value="1" />
    <property name="maxActive" value="20" />

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000" />

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000" />

    <property name="validationQuery" value="SELECT 1" />
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />

    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
  </bean>
  
  <!-- 数据库代理，监听sql执行，使用sql的存储过程 -->
  <bean id="proxyDataSource" primary="true" class="net.ttddyy.dsproxy.support.ProxyDataSource">
    <property name="dataSource" ref="dataSource"/>
    <property name="proxyConfig" ref="proxyConfig"/>
  </bean>

  <!-- 数据库代理配置 -->
  <bean id="proxyConfig" factory-bean="proxyConfigSupport" factory-method="create"/>

  <bean id="proxyConfigSupport" class="net.ttddyy.dsproxy.support.ProxyConfigSpringXmlSupport">
    <property name="dataSourceName" value="my-ds"/>
    <property name="queryListener" ref="queryListeners"/>
  </bean>
  
  <bean id="queryListeners" class="net.ttddyy.dsproxy.listener.ChainListener">
    <property name="listeners">
      <list>
        <bean class="net.ttddyy.dsproxy.listener.logging.SystemOutQueryLoggingListener">
        </bean>
        <bean class="net.ttddyy.dsproxy.listener.DataSourceQueryCountListener"/>
      </list>
    </property>
  </bean>
  
  <!-- hibernate session -->
  <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
        <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
        <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
        <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
        <prop key="current_session_context_class">${current_session_context_class}</prop>
        <prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
      </props>
    </property>
    <property name="packagesToScan">
      <list>
        <value>com.zhihao.seckill..pojo</value>
      </list> 
    </property>
  </bean> 
  
  <!-- 事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
  <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"></property>  
  </bean>
  
  <!-- RedisDao -->
  <bean id="redisDao" class="com.zhihao.seckill.dao.cache.RedisDao">
    <constructor-arg index="0" value="localhost"/>
    <constructor-arg index="1" value="6379"/>
  </bean>
  
</beans>